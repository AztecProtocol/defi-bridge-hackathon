"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefiProofOutput = exports.AccountProofOutput = exports.JoinSplitProofOutput = void 0;
const address_1 = require("@aztec/barretenberg/address");
const client_proofs_1 = require("@aztec/barretenberg/client_proofs");
const tx_hash_1 = require("@aztec/barretenberg/tx_hash");
const user_1 = require("../user");
const user_tx_1 = require("../user_tx");
class JoinSplitProofOutput {
    constructor(tx, proofData, viewingKeys, signingData) {
        this.tx = tx;
        this.proofData = proofData;
        this.viewingKeys = viewingKeys;
        this.signingData = signingData;
    }
}
exports.JoinSplitProofOutput = JoinSplitProofOutput;
class AccountProofOutput {
    constructor(tx, proofData) {
        this.tx = tx;
        this.proofData = proofData;
        this.viewingKeys = [];
    }
    static fromBuffer(buf) {
        const [migratedBuf, rawProofData] = [buf.slice(0, 1), buf.slice(1)];
        const proofData = new client_proofs_1.ProofData(rawProofData);
        const accountProof = new client_proofs_1.AccountProofData(proofData);
        const publicKey = new address_1.GrumpkinAddress(accountProof.publicKey);
        const { nonce, aliasHash } = accountProof.accountAliasId;
        const tx = new user_tx_1.UserAccountTx(new tx_hash_1.TxHash(proofData.txId), new user_1.AccountId(publicKey, nonce), aliasHash, proofData.inputOwner, proofData.outputOwner, !migratedBuf.equals(Buffer.alloc(1)), new Date());
        return new AccountProofOutput(tx, rawProofData);
    }
    toBuffer() {
        return Buffer.concat([Buffer.from([+this.tx.migrated]), this.proofData]);
    }
}
exports.AccountProofOutput = AccountProofOutput;
class DefiProofOutput {
    constructor(tx, proofData, viewingKeys) {
        this.tx = tx;
        this.proofData = proofData;
        this.viewingKeys = viewingKeys;
    }
}
exports.DefiProofOutput = DefiProofOutput;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvb2Zfb3V0cHV0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3Byb29mcy9wcm9vZl9vdXRwdXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEseURBQThEO0FBQzlELHFFQUFnRjtBQUVoRix5REFBcUQ7QUFFckQsa0NBQW9DO0FBQ3BDLHdDQUF3RTtBQU94RSxNQUFhLG9CQUFvQjtJQUMvQixZQUNTLEVBQW1CLEVBQ25CLFNBQWlCLEVBQ2pCLFdBQXlCLEVBQ3pCLFdBQW9CO1FBSHBCLE9BQUUsR0FBRixFQUFFLENBQWlCO1FBQ25CLGNBQVMsR0FBVCxTQUFTLENBQVE7UUFDakIsZ0JBQVcsR0FBWCxXQUFXLENBQWM7UUFDekIsZ0JBQVcsR0FBWCxXQUFXLENBQVM7SUFDMUIsQ0FBQztDQUNMO0FBUEQsb0RBT0M7QUFFRCxNQUFhLGtCQUFrQjtJQUc3QixZQUFtQixFQUFpQixFQUFTLFNBQWlCO1FBQTNDLE9BQUUsR0FBRixFQUFFLENBQWU7UUFBUyxjQUFTLEdBQVQsU0FBUyxDQUFRO1FBRjlDLGdCQUFXLEdBQUcsRUFBRSxDQUFDO0lBRWdDLENBQUM7SUFFbEUsTUFBTSxDQUFDLFVBQVUsQ0FBQyxHQUFXO1FBQzNCLE1BQU0sQ0FBQyxXQUFXLEVBQUUsWUFBWSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDcEUsTUFBTSxTQUFTLEdBQUcsSUFBSSx5QkFBUyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBQzlDLE1BQU0sWUFBWSxHQUFHLElBQUksZ0NBQWdCLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDckQsTUFBTSxTQUFTLEdBQUcsSUFBSSx5QkFBZSxDQUFDLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUM5RCxNQUFNLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxHQUFHLFlBQVksQ0FBQyxjQUFjLENBQUM7UUFDekQsTUFBTSxFQUFFLEdBQUcsSUFBSSx1QkFBYSxDQUMxQixJQUFJLGdCQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUMxQixJQUFJLGdCQUFTLENBQUMsU0FBUyxFQUFFLEtBQUssQ0FBQyxFQUMvQixTQUFTLEVBQ1QsU0FBUyxDQUFDLFVBQVUsRUFDcEIsU0FBUyxDQUFDLFdBQVcsRUFDckIsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFDcEMsSUFBSSxJQUFJLEVBQUUsQ0FDWCxDQUFDO1FBQ0YsT0FBTyxJQUFJLGtCQUFrQixDQUFDLEVBQUUsRUFBRSxZQUFZLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBRUQsUUFBUTtRQUNOLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQztJQUMzRSxDQUFDO0NBQ0Y7QUExQkQsZ0RBMEJDO0FBRUQsTUFBYSxlQUFlO0lBQzFCLFlBQW1CLEVBQWMsRUFBUyxTQUFpQixFQUFTLFdBQXlCO1FBQTFFLE9BQUUsR0FBRixFQUFFLENBQVk7UUFBUyxjQUFTLEdBQVQsU0FBUyxDQUFRO1FBQVMsZ0JBQVcsR0FBWCxXQUFXLENBQWM7SUFBRyxDQUFDO0NBQ2xHO0FBRkQsMENBRUMifQ==