/// <reference types="node" />
import { EthAddress } from '@aztec/barretenberg/address';
import { AssetId } from '@aztec/barretenberg/asset';
import { BridgeId } from '@aztec/barretenberg/bridge_id';
import { JoinSplitProver } from '@aztec/barretenberg/client_proofs';
import { Pedersen } from '@aztec/barretenberg/crypto';
import { Grumpkin } from '@aztec/barretenberg/ecc';
import { NoteAlgorithms } from '@aztec/barretenberg/note_algorithms';
import { WorldState } from '@aztec/barretenberg/world_state';
import { Database } from '../../database';
import { Signer } from '../../signer';
import { AccountId } from '../../user';
import { UserState } from '../../user_state';
export declare class JoinSplitProofCreator {
    private joinSplitProver;
    private txFactory;
    constructor(joinSplitProver: JoinSplitProver, worldState: WorldState, grumpkin: Grumpkin, pedersen: Pedersen, noteAlgos: NoteAlgorithms, db: Database);
    createProof(userState: UserState, publicInput: bigint, publicOutput: bigint, privateInput: bigint, recipientPrivateOutput: bigint, senderPrivateOutput: bigint, defiDepositValue: bigint, assetId: AssetId, signer: Signer, newNoteOwner?: AccountId, inputOwner?: EthAddress, outputOwner?: EthAddress, bridgeId?: BridgeId): Promise<{
        proofData: Buffer;
        viewingKeys: import("@aztec/barretenberg/viewing_key").ViewingKey[];
        depositSigningData: Buffer;
        txId: Buffer;
    }>;
}
//# sourceMappingURL=index.d.ts.map