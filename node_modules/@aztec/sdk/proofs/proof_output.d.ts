/// <reference types="node" />
import { Proof } from '@aztec/barretenberg/rollup_provider';
import { ViewingKey } from '@aztec/barretenberg/viewing_key';
import { UserAccountTx, UserDefiTx, UserJoinSplitTx } from '../user_tx';
export interface ProofOutput extends Proof {
    tx: UserJoinSplitTx | UserAccountTx | UserDefiTx;
    signingData?: Buffer;
}
export declare class JoinSplitProofOutput implements ProofOutput {
    tx: UserJoinSplitTx;
    proofData: Buffer;
    viewingKeys: ViewingKey[];
    signingData?: Buffer | undefined;
    constructor(tx: UserJoinSplitTx, proofData: Buffer, viewingKeys: ViewingKey[], signingData?: Buffer | undefined);
}
export declare class AccountProofOutput implements ProofOutput {
    tx: UserAccountTx;
    proofData: Buffer;
    readonly viewingKeys: never[];
    constructor(tx: UserAccountTx, proofData: Buffer);
    static fromBuffer(buf: Buffer): AccountProofOutput;
    toBuffer(): Buffer;
}
export declare class DefiProofOutput implements ProofOutput {
    tx: UserDefiTx;
    proofData: Buffer;
    viewingKeys: ViewingKey[];
    constructor(tx: UserDefiTx, proofData: Buffer, viewingKeys: ViewingKey[]);
}
//# sourceMappingURL=proof_output.d.ts.map