"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WalletSdkUserAsset = void 0;
class WalletSdkUserAsset {
    constructor(userId, assetId, sdk) {
        this.userId = userId;
        this.assetId = assetId;
        this.sdk = sdk;
    }
    info() {
        return this.sdk.getAssetInfo(this.assetId);
    }
    balance() {
        return this.sdk.getBalance(this.assetId, this.userId);
    }
    async publicBalance(account) {
        return this.sdk.getPublicBalance(this.assetId, account);
    }
    async publicAllowance(account) {
        return this.sdk.getPublicAllowance(this.assetId, account);
    }
    async pendingDeposit(account) {
        return this.sdk.getUserPendingDeposit(this.assetId, account);
    }
    async getMaxSpendableValue() {
        return this.sdk.getMaxSpendableValue(this.assetId, this.userId);
    }
    async mint(value, account) {
        return this.sdk.mint(this.assetId, value, account);
    }
    async approve(value, account) {
        return this.sdk.approve(this.assetId, value, account);
    }
    async depositFundsToContract(from, value, permitArgs) {
        return this.sdk.depositFundsToContract(this.assetId, from, value, permitArgs);
    }
    async createDepositProof(value, fee, signer, from) {
        return this.sdk.createDepositProof(this.assetId, from, this.userId, value, fee, signer);
    }
    async createWithdrawProof(value, fee, signer, to) {
        return this.sdk.createWithdrawProof(this.assetId, this.userId, value, fee, signer, to);
    }
    async createTransferProof(value, fee, signer, to) {
        return this.sdk.createTransferProof(this.assetId, this.userId, value, fee, signer, to);
    }
    fromBaseUnits(value, precision) {
        return this.sdk.fromBaseUnits(this.assetId, value, precision);
    }
    toBaseUnits(value) {
        return this.sdk.toBaseUnits(this.assetId, value);
    }
    async getFee(txType) {
        return this.sdk.getFee(this.assetId, txType);
    }
}
exports.WalletSdkUserAsset = WalletSdkUserAsset;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FsbGV0X3Nka191c2VyX2Fzc2V0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3dhbGxldF9zZGsvd2FsbGV0X3Nka191c2VyX2Fzc2V0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQU9BLE1BQWEsa0JBQWtCO0lBQzdCLFlBQW1CLE1BQWlCLEVBQVMsT0FBZ0IsRUFBVSxHQUFjO1FBQWxFLFdBQU0sR0FBTixNQUFNLENBQVc7UUFBUyxZQUFPLEdBQVAsT0FBTyxDQUFTO1FBQVUsUUFBRyxHQUFILEdBQUcsQ0FBVztJQUFHLENBQUM7SUFFekYsSUFBSTtRQUNGLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFFRCxPQUFPO1FBQ0wsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUN4RCxDQUFDO0lBRUQsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFtQjtRQUNyQyxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztJQUMxRCxDQUFDO0lBRUQsS0FBSyxDQUFDLGVBQWUsQ0FBQyxPQUFtQjtRQUN2QyxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztJQUM1RCxDQUFDO0lBRUQsS0FBSyxDQUFDLGNBQWMsQ0FBQyxPQUFtQjtRQUN0QyxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztJQUMvRCxDQUFDO0lBRUQsS0FBSyxDQUFDLG9CQUFvQjtRQUN4QixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbEUsQ0FBQztJQUVELEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBYSxFQUFFLE9BQW1CO1FBQzNDLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDckQsQ0FBQztJQUVELEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBYSxFQUFFLE9BQW1CO1FBQzlDLE9BQU8sSUFBSSxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxLQUFLLEVBQUUsT0FBTyxDQUFDLENBQUM7SUFDeEQsQ0FBQztJQUVELEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxJQUFnQixFQUFFLEtBQWEsRUFBRSxVQUF1QjtRQUNuRixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0lBQ2hGLENBQUM7SUFFRCxLQUFLLENBQUMsa0JBQWtCLENBQUMsS0FBYSxFQUFFLEdBQVcsRUFBRSxNQUFjLEVBQUUsSUFBZ0I7UUFDbkYsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsS0FBSyxFQUFFLEdBQUcsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUMxRixDQUFDO0lBRUQsS0FBSyxDQUFDLG1CQUFtQixDQUFDLEtBQWEsRUFBRSxHQUFXLEVBQUUsTUFBYyxFQUFFLEVBQWM7UUFDbEYsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN6RixDQUFDO0lBRUQsS0FBSyxDQUFDLG1CQUFtQixDQUFDLEtBQWEsRUFBRSxHQUFXLEVBQUUsTUFBYyxFQUFFLEVBQWE7UUFDakYsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxLQUFLLEVBQUUsR0FBRyxFQUFFLE1BQU0sRUFBRSxFQUFFLENBQUMsQ0FBQztJQUN6RixDQUFDO0lBRU0sYUFBYSxDQUFDLEtBQWEsRUFBRSxTQUFrQjtRQUNwRCxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSyxFQUFFLFNBQVMsQ0FBQyxDQUFDO0lBQ2hFLENBQUM7SUFFTSxXQUFXLENBQUMsS0FBYTtRQUM5QixPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDbkQsQ0FBQztJQUVNLEtBQUssQ0FBQyxNQUFNLENBQUMsTUFBYztRQUNoQyxPQUFPLElBQUksQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDL0MsQ0FBQztDQUNGO0FBOURELGdEQThEQyJ9