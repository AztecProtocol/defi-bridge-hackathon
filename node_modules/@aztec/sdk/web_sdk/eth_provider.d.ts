/// <reference types="node" />
import { EventEmitter } from 'events';
import { EthAddress } from '@aztec/barretenberg/address';
import { EthereumProvider } from '@aztec/blockchain';
export declare enum EthProviderEvent {
    UPDATED_NETWORK = "UPDATED_NETWORK",
    UPDATED_ACCOUNT = "UPDATED_ACCOUNT"
}
interface Network {
    chainId: number;
    network: string;
}
export declare const networks: Network[];
export declare const chainIdToNetwork: (chainId: number) => string;
export declare class EthProvider extends EventEmitter {
    private provider;
    private chainId;
    private accounts;
    constructor(provider: EthereumProvider);
    init(): Promise<EthAddress | undefined>;
    destroy(): void;
    private updateNetwork;
    private updateAccounts;
    getChainId(): number;
    getNetwork(): string;
    getAccounts(): EthAddress[];
    getAccount(): EthAddress | undefined;
}
export {};
//# sourceMappingURL=eth_provider.d.ts.map