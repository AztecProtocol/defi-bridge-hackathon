"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EthProvider = exports.chainIdToNetwork = exports.networks = exports.EthProviderEvent = void 0;
const tslib_1 = require("tslib");
const events_1 = require("events");
const debug_1 = tslib_1.__importDefault(require("debug"));
const address_1 = require("@aztec/barretenberg/address");
const providers_1 = require("@ethersproject/providers");
const debug = debug_1.default('bb:eth_provider');
var EthProviderEvent;
(function (EthProviderEvent) {
    EthProviderEvent["UPDATED_NETWORK"] = "UPDATED_NETWORK";
    EthProviderEvent["UPDATED_ACCOUNT"] = "UPDATED_ACCOUNT";
})(EthProviderEvent = exports.EthProviderEvent || (exports.EthProviderEvent = {}));
exports.networks = [
    { chainId: 1, network: 'mainnet' },
    { chainId: 3, network: 'ropsten' },
    { chainId: 4, network: 'rinkeby' },
    { chainId: 5, network: 'goerli' },
    { chainId: 42, network: 'kovan' },
    { chainId: 1337, network: 'ganache' },
];
exports.chainIdToNetwork = (chainId) => {
    var _a;
    return ((_a = exports.networks.find(network => network.chainId === chainId)) === null || _a === void 0 ? void 0 : _a.network) || 'unknown';
};
class EthProvider extends events_1.EventEmitter {
    constructor(provider) {
        super();
        this.provider = provider;
        this.chainId = -1;
        this.accounts = [];
        this.updateNetwork = async () => {
            const ethersProvider = new providers_1.Web3Provider(this.provider);
            this.chainId = (await ethersProvider.getNetwork()).chainId;
            const network = exports.chainIdToNetwork(this.chainId);
            debug(`chainId set to: ${this.chainId}`);
            this.emit(EthProviderEvent.UPDATED_NETWORK, network, this.chainId);
        };
        this.updateAccounts = (accounts) => {
            this.accounts = accounts.map(address_1.EthAddress.fromString);
            this.emit(EthProviderEvent.UPDATED_ACCOUNT, this.accounts[0]);
        };
    }
    async init() {
        const ethersProvider = new providers_1.Web3Provider(this.provider);
        await this.provider.request({ method: 'eth_requestAccounts' });
        await this.updateNetwork();
        const accounts = await ethersProvider.listAccounts();
        this.updateAccounts(accounts);
        this.provider.on('chainChanged', this.updateNetwork);
        this.provider.on('accountsChanged', this.updateAccounts);
        return this.getAccount();
    }
    destroy() {
        this.provider.removeListener('chainChanged', this.updateNetwork);
        this.provider.removeListener('accountsChanged', this.updateAccounts);
        this.removeAllListeners();
    }
    getChainId() {
        return this.chainId;
    }
    getNetwork() {
        return exports.chainIdToNetwork(this.getChainId());
    }
    getAccounts() {
        return this.accounts;
    }
    getAccount() {
        return this.accounts[0];
    }
}
exports.EthProvider = EthProvider;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXRoX3Byb3ZpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3dlYl9zZGsvZXRoX3Byb3ZpZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxtQ0FBc0M7QUFDdEMsMERBQWdDO0FBQ2hDLHlEQUF5RDtBQUV6RCx3REFBd0Q7QUFFeEQsTUFBTSxLQUFLLEdBQUcsZUFBVyxDQUFDLGlCQUFpQixDQUFDLENBQUM7QUFFN0MsSUFBWSxnQkFHWDtBQUhELFdBQVksZ0JBQWdCO0lBQzFCLHVEQUFtQyxDQUFBO0lBQ25DLHVEQUFtQyxDQUFBO0FBQ3JDLENBQUMsRUFIVyxnQkFBZ0IsR0FBaEIsd0JBQWdCLEtBQWhCLHdCQUFnQixRQUczQjtBQU9ZLFFBQUEsUUFBUSxHQUFjO0lBQ2pDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFO0lBQ2xDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFO0lBQ2xDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFO0lBQ2xDLEVBQUUsT0FBTyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFO0lBQ2pDLEVBQUUsT0FBTyxFQUFFLEVBQUUsRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFO0lBQ2pDLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFO0NBQ3RDLENBQUM7QUFFVyxRQUFBLGdCQUFnQixHQUFHLENBQUMsT0FBZSxFQUFFLEVBQUU7O0lBQ2xELE9BQU8sT0FBQSxnQkFBUSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEtBQUssT0FBTyxDQUFDLDBDQUFFLE9BQU8sS0FBSSxTQUFTLENBQUM7QUFDckYsQ0FBQyxDQUFDO0FBRUYsTUFBYSxXQUFZLFNBQVEscUJBQVk7SUFJM0MsWUFBb0Is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