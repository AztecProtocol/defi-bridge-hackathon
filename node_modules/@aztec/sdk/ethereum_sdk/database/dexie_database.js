"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DexieDatabase = void 0;
const tslib_1 = require("tslib");
const address_1 = require("@aztec/barretenberg/address");
const dexie_1 = tslib_1.__importDefault(require("dexie"));
class DexieAccount {
    constructor(ethAddress, accountPublicKey) {
        this.ethAddress = ethAddress;
        this.accountPublicKey = accountPublicKey;
    }
}
const dexieAccountToDbAccount = ({ ethAddress, accountPublicKey }) => ({
    ethAddress: new address_1.EthAddress(Buffer.from(ethAddress)),
    accountPublicKey: new address_1.GrumpkinAddress(Buffer.from(accountPublicKey)),
});
class DexieDatabase {
    constructor(dbName = 'aztec2-sdk-eth', version = 1) {
        this.dbName = dbName;
        this.version = version;
    }
    async init() {
        this.createTables();
        // If schemas changed, delete db.
        try {
            await this.getAccount(address_1.EthAddress.ZERO);
        }
        catch (e) {
            await this.db.delete();
            this.createTables();
        }
    }
    createTables() {
        this.db = new dexie_1.default(this.dbName);
        this.db.version(this.version).stores({
            user: '&ethAddress',
        });
        this.user = this.db.table('user');
        this.user.mapToClass(DexieAccount);
    }
    async clear() {
        for (const table of this.db.tables) {
            await table.clear();
        }
    }
    async close() {
        await this.db.close();
    }
    async setAccount({ ethAddress, accountPublicKey }) {
        await this.user.put(new DexieAccount(new Uint8Array(ethAddress.toBuffer()), new Uint8Array(accountPublicKey.toBuffer())));
    }
    async getAccount(ethAddress) {
        const account = await this.user.get({ ethAddress: new Uint8Array(ethAddress.toBuffer()) });
        return account ? dexieAccountToDbAccount(account) : undefined;
    }
    async deleteAccount(ethAddress) {
        await this.user.delete(new Uint8Array(ethAddress.toBuffer()));
    }
}
exports.DexieDatabase = DexieDatabase;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGV4aWVfZGF0YWJhc2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZXRoZXJldW1fc2RrL2RhdGFiYXNlL2RleGllX2RhdGFiYXNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSx5REFBMEU7QUFDMUUsMERBQTBCO0FBRzFCLE1BQU0sWUFBWTtJQUNoQixZQUFtQixVQUFzQixFQUFTLGdCQUE0QjtRQUEzRCxlQUFVLEdBQVYsVUFBVSxDQUFZO1FBQVMscUJBQWdCLEdBQWhCLGdCQUFnQixDQUFZO0lBQUcsQ0FBQztDQUNuRjtBQUVELE1BQU0sdUJBQXVCLEdBQUcsQ0FBQyxFQUFFLFVBQVUsRUFBRSxnQkFBZ0IsRUFBZ0IsRUFBYSxFQUFFLENBQUMsQ0FBQztJQUM5RixVQUFVLEVBQUUsSUFBSSxvQkFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7SUFDbkQsZ0JBQWdCLEVBQUUsSUFBSSx5QkFBZSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQztDQUNyRSxDQUFDLENBQUM7QUFFSCxNQUFhLGFBQWE7SUFJeEIsWUFBb0IsU0FBUyxnQkFBZ0IsRUFBVSxVQUFVLENBQUM7UUFBOUMsV0FBTSxHQUFOLE1BQU0sQ0FBbUI7UUFBVSxZQUFPLEdBQVAsT0FBTyxDQUFJO0lBQUcsQ0FBQztJQUV0RSxLQUFLLENBQUMsSUFBSTtRQUNSLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUVwQixpQ0FBaUM7UUFDakMsSUFBSTtZQUNGLE1BQU0sSUFBSSxDQUFDLFVBQVUsQ0FBQyxvQkFBVSxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3hDO1FBQUMsT0FBTyxDQUFDLEVBQUU7WUFDVixNQUFNLElBQUksQ0FBQyxFQUFFLENBQUMsTUFBTSxFQUFFLENBQUM7WUFDdkIsSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1NBQ3JCO0lBQ0gsQ0FBQztJQUVPLFlBQVk7UUFDbEIsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLGVBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDakMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLE1BQU0sQ0FBQztZQUNuQyxJQUFJLEVBQUUsYUFBYTtTQUNwQixDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ2xDLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQ3JDLENBQUM7SUFFRCxLQUFLLENBQUMsS0FBSztRQUNULEtBQUssTUFBTSxLQUFLLElBQUksSUFBSSxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUU7WUFDbEMsTUFBTSxLQUFLLENBQUMsS0FBSyxFQUFFLENBQUM7U0FDckI7SUFDSCxDQUFDO0lBRUQsS0FBSyxDQUFDLEtBQUs7UUFDVCxNQUFNLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDeEIsQ0FBQztJQUVELEtBQUssQ0FBQyxVQUFVLENBQUMsRUFBRSxVQUFVLEVBQUUsZ0JBQWdCLEVBQWE7UUFDMUQsTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FDakIsSUFBSSxZQUFZLENBQUMsSUFBSSxVQUFVLENBQUMsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDLEVBQUUsSUFBSSxVQUFVLENBQUMsZ0JBQWdCLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUNyRyxDQUFDO0lBQ0osQ0FBQztJQUVELEtBQUssQ0FBQyxVQUFVLENBQUMsVUFBc0I7UUFDckMsTUFBTSxPQUFPLEdBQUcsTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLFVBQVUsRUFBRSxJQUFJLFVBQVUsQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7UUFDM0YsT0FBTyxPQUFPLENBQUMsQ0FBQyxDQUFDLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7SUFDaEUsQ0FBQztJQUVELEtBQUssQ0FBQyxhQUFhLENBQUMsVUFBc0I7UUFDeEMsTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLFVBQVUsQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDO0lBQ2hFLENBQUM7Q0FDRjtBQXBERCxzQ0FvREMifQ==