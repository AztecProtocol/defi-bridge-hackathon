import { EthAddress, GrumpkinAddress } from '@aztec/barretenberg/address';
import { AssetId } from '@aztec/barretenberg/asset';
import { AccountId } from '../user';
import { EthereumSdk } from './';
import { EthereumSdkUserAsset } from './ethereum_sdk_user_asset';
export declare class EthereumSdkUser {
    private address;
    private accountId;
    private sdk;
    constructor(address: EthAddress, accountId: AccountId, sdk: EthereumSdk);
    isSynching(): boolean;
    awaitSynchronised(): Promise<void>;
    createAccount(alias: string, newSigningPublicKey: GrumpkinAddress, recoveryPublicKey?: GrumpkinAddress): Promise<import("@aztec/barretenberg/tx_hash").TxHash>;
    getUserData(): import("../user").UserData;
    remove(): Promise<void>;
    getJoinSplitTxs(): Promise<import("..").UserJoinSplitTx[]>;
    getAccountTxs(): Promise<import("..").UserAccountTx[]>;
    getNotes(): Promise<import("..").Note[]>;
    getAsset(assetId: AssetId): EthereumSdkUserAsset;
}
//# sourceMappingURL=ethereum_sdk_user.d.ts.map