#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ethers_1 = require("ethers");
const experimental_1 = require("@ethersproject/experimental");
const deploy_fee_distributor_1 = require("./deploy_fee_distributor");
const { ETHEREUM_HOST = 'http://localhost:8545', PRIVATE_KEY, ROLLUP_CONTRACT_ADDRESS, UNISWAP_ROUTER_ADDRESS, } = process.env;
function getSigner() {
    if (!PRIVATE_KEY) {
        throw new Error('Specify PRIVATE_KEY.');
    }
    console.error(`Json rpc provider: ${ETHEREUM_HOST}`);
    const provider = new ethers_1.ethers.providers.JsonRpcProvider(ETHEREUM_HOST);
    return new experimental_1.NonceManager(new ethers_1.ethers.Wallet(PRIVATE_KEY, provider));
}
async function main() {
    if (!ROLLUP_CONTRACT_ADDRESS) {
        throw new Error('Specify ROLLUP_CONTRACT_ADDRESS.');
    }
    if (!UNISWAP_ROUTER_ADDRESS) {
        throw new Error('Specify UNISWAP_ROUTER_ADDRESS.');
    }
    const feeDistributor = await deploy_fee_distributor_1.deployFeeDistributor(getSigner(), ROLLUP_CONTRACT_ADDRESS, UNISWAP_ROUTER_ADDRESS);
    console.log(`FEE_DISTRIBUTOR_ADDRESS: ${feeDistributor.address}`);
}
main().catch(error => {
    console.error(error);
    process.exit(1);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZGVwbG95X3Byb2QvZmVlX2Rpc3RyaWJ1dG9yL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUNBLG1DQUF3QztBQUN4Qyw4REFBMkQ7QUFDM0QscUVBQWdFO0FBRWhFLE1BQU0sRUFDSixhQUFhLEdBQUcsdUJBQXVCLEVBQ3ZDLFdBQVcsRUFDWCx1QkFBdUIsRUFDdkIsc0JBQXNCLEdBQ3ZCLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQztBQUVoQixTQUFTLFNBQVM7SUFDaEIsSUFBSSxDQUFDLFdBQVcsRUFBRTtRQUNoQixNQUFNLElBQUksS0FBSyxDQUFDLHNCQUFzQixDQUFDLENBQUM7S0FDekM7SUFDRCxPQUFPLENBQUMsS0FBSyxDQUFDLHNCQUFzQixhQUFhLEVBQUUsQ0FBQyxDQUFDO0lBQ3JELE1BQU0sUUFBUSxHQUFHLElBQUksZUFBTSxDQUFDLFNBQVMsQ0FBQyxlQUFlLENBQUMsYUFBYSxDQUFDLENBQUM7SUFDckUsT0FBTyxJQUFJLDJCQUFZLENBQUMsSUFBSSxlQUFNLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxRQUFRLENBQVcsQ0FBQyxDQUFDO0FBQzlFLENBQUM7QUFFRCxLQUFLLFVBQVUsSUFBSTtJQUNqQixJQUFJLENBQUMsdUJBQXVCLEVBQUU7UUFDNUIsTUFBTSxJQUFJLEtBQUssQ0FBQyxrQ0FBa0MsQ0FBQyxDQUFDO0tBQ3JEO0lBQ0QsSUFBSSxDQUFDLHNCQUFzQixFQUFFO1FBQzNCLE1BQU0sSUFBSSxLQUFLLENBQUMsaUNBQWlDLENBQUMsQ0FBQztLQUNwRDtJQUNELE1BQU0sY0FBYyxHQUFHLE1BQU0sNkNBQW9CLENBQUMsU0FBUyxFQUFFLEVBQUUsdUJBQXVCLEVBQUUsc0JBQXNCLENBQUMsQ0FBQztJQUNoSCxPQUFPLENBQUMsR0FBRyxDQUFDLDRCQUE0QixjQUFjLENBQUMsT0FBTyxFQUFFLENBQUMsQ0FBQztBQUNwRSxDQUFDO0FBRUQsSUFBSSxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxFQUFFO0lBQ25CLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDckIsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNsQixDQUFDLENBQUMsQ0FBQyJ9