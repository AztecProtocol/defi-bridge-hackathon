/// <reference types="node" />
import { GrumpkinAddress } from '../address';
import { AssetId } from '../asset';
import { Grumpkin } from '../ecc/grumpkin';
import { ViewingKey } from '../viewing_key';
import { DecryptedNote } from './decrypted_note';
export declare class TreeNote {
    ownerPubKey: GrumpkinAddress;
    value: bigint;
    assetId: AssetId;
    nonce: number;
    noteSecret: Buffer;
    static EMPTY: TreeNote;
    constructor(ownerPubKey: GrumpkinAddress, value: bigint, assetId: AssetId, nonce: number, noteSecret: Buffer);
    toBuffer(): Buffer;
    getViewingKey(ephPrivKey: Buffer, grumpkin: Grumpkin): ViewingKey;
    static createFromEphPriv(ownerPubKey: GrumpkinAddress, value: bigint, assetId: AssetId, nonce: number, ephPrivKey: Buffer, grumpkin: Grumpkin, noteVersion?: number): TreeNote;
    static createFromEphPub(ownerPubKey: GrumpkinAddress, value: bigint, assetId: AssetId, nonce: number, ephPubKey: GrumpkinAddress, ownerPrivKey: Buffer, grumpkin: Grumpkin, noteVersion?: number): TreeNote;
    static recover({ noteBuf, noteSecret }: DecryptedNote, ownerPubKey: GrumpkinAddress): TreeNote;
}
//# sourceMappingURL=tree_note.d.ts.map