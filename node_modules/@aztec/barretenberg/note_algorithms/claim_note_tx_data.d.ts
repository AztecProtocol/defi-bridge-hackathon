/// <reference types="node" />
import { GrumpkinAddress } from '../address';
import { Grumpkin } from '../ecc/grumpkin';
import { ViewingKey } from '../viewing_key';
import { AccountId } from '../account_id';
import { BridgeId } from '../bridge_id';
export declare class ClaimNoteTxData {
    value: bigint;
    bridgeId: BridgeId;
    ownerPubKey: GrumpkinAddress;
    ownerNonce: number;
    noteSecret: Buffer;
    static EMPTY: ClaimNoteTxData;
    constructor(value: bigint, bridgeId: BridgeId, ownerPubKey: GrumpkinAddress, ownerNonce: number, noteSecret: Buffer);
    static createFromEphPriv(value: bigint, bridgeId: BridgeId, owner: AccountId, ephPrivKey: Buffer, grumpkin: Grumpkin): ClaimNoteTxData;
    static createFromEphPub(value: bigint, bridgeId: BridgeId, owner: AccountId, ephPubKey: GrumpkinAddress, ownerPrivKey: Buffer, grumpkin: Grumpkin): ClaimNoteTxData;
    toBuffer(): Buffer;
    equals(note: ClaimNoteTxData): boolean;
    getViewingKey(ownerPubKey: GrumpkinAddress, ephPrivKey: Buffer, grumpkin: Grumpkin): ViewingKey;
}
//# sourceMappingURL=claim_note_tx_data.d.ts.map