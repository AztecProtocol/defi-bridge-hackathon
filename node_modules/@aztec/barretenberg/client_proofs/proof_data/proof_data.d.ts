/// <reference types="node" />
import { ProofId } from './proof_id';
/**
 * Represents tx proof data as returned by the proof generator.
 * Differs to on chain data, in that not all data here is actually published.
 * Fields that differ between proofs, or natural buffers, are of type Buffer.
 * Fields that are always of fixed type/meaning are converted.
 */
export declare class ProofData {
    rawProofData: Buffer;
    static readonly NUM_PUBLIC_INPUTS = 12;
    readonly txId: Buffer;
    readonly proofId: ProofId;
    readonly publicInput: Buffer;
    readonly publicOutput: Buffer;
    readonly assetId: Buffer;
    readonly noteCommitment1: Buffer;
    readonly noteCommitment2: Buffer;
    readonly nullifier1: Buffer;
    readonly nullifier2: Buffer;
    readonly inputOwner: Buffer;
    readonly outputOwner: Buffer;
    readonly noteTreeRoot: Buffer;
    readonly txFee: bigint;
    constructor(rawProofData: Buffer);
}
//# sourceMappingURL=proof_data.d.ts.map