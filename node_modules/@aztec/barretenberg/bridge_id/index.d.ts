/// <reference types="node" />
import { EthAddress } from '../address';
export declare class BridgeId {
    readonly address: EthAddress;
    readonly numOutputAssets: number;
    readonly inputAssetId: number;
    readonly outputAssetIdA: number;
    readonly outputAssetIdB: number;
    static ZERO: BridgeId;
    static LENGTH: number;
    static ADDRESS_BIT_LEN: number;
    static NUM_OUTPUT_NOTES_LEN: number;
    static INPUT_ASSET_ID_LEN: number;
    static OUTPUT_A_ASSET_ID_LEN: number;
    static OUTPUT_B_ASSET_ID_LEN: number;
    constructor(address: EthAddress, numOutputAssets: number, inputAssetId: number, outputAssetIdA: number, outputAssetIdB: number);
    static random(): BridgeId;
    static fromBigInt(val: bigint): BridgeId;
    static fromBuffer(buf: Buffer): BridgeId;
    static fromString(str: string): BridgeId;
    toBigInt(): bigint;
    toBuffer(): Buffer;
    toString(): string;
    equals(id: BridgeId): boolean;
}
//# sourceMappingURL=index.d.ts.map